))) |>
ggplot(aes(values = n, label = rapp, colour = rapp, fill = occ)) +
geom_waffle(make_proportional = T, flip = T) +
facet_wrap(~occ) +
theme_void() +
guides(label=guide_legend(nrow=2, byrow=TRUE)) +
theme(legend.title = element_blank(),
legend.position = 'bottom',
strip.text = element_text(size = 12),
plot.title = element_text(size = 20, hjust = .5))
Restare |>
group_by(rapp, occ) |>
count() |>
mutate(occ = case_match(occ,
'Disoccupat*' ~ 'Unemployed',
'Studente' ~ 'Student',
'Lavorator*' ~ 'Worker',
'Dottorand*' ~ 'PhD candidate'),
rapp = case_match(rapp,
'Vorrei restare nel posto in cui vivo' ~
'I\'d like to stay where I am',
'Sarei contento di vivere e lavorare altrove' ~
'I\'d like to live and work somewhere else',
'Vorrei restare ma non posso' ~
'I\'d like to stay, but I can\'t',
'Vorrei partire ma non posso' ~
'I\'d like to leave, but I can\'t'),
rapp = factor(rapp, levels = c(
'I\'d like to stay where I am',
'I\'d like to stay, but I can\'t',
'I\'d like to leave, but I can\'t',
'I\'d like to live and work somewhere else'
))) |>
ggplot(aes(values = n, label = rapp)) +
geom_waffle(make_proportional = T, flip = T) +
facet_wrap(~occ) +
theme_void() +
guides(label=guide_legend(nrow=2, byrow=TRUE)) +
theme(legend.title = element_blank(),
legend.position = 'bottom',
strip.text = element_text(size = 12),
plot.title = element_text(size = 20, hjust = .5))
Restare |>
group_by(rapp, occ) |>
count() |>
mutate(occ = case_match(occ,
'Disoccupat*' ~ 'Unemployed',
'Studente' ~ 'Student',
'Lavorator*' ~ 'Worker',
'Dottorand*' ~ 'PhD candidate'),
rapp = case_match(rapp,
'Vorrei restare nel posto in cui vivo' ~
'I\'d like to stay where I am',
'Sarei contento di vivere e lavorare altrove' ~
'I\'d like to live and work somewhere else',
'Vorrei restare ma non posso' ~
'I\'d like to stay, but I can\'t',
'Vorrei partire ma non posso' ~
'I\'d like to leave, but I can\'t'),
rapp = factor(rapp, levels = c(
'I\'d like to stay where I am',
'I\'d like to stay, but I can\'t',
'I\'d like to leave, but I can\'t',
'I\'d like to live and work somewhere else'
))) |>
ggplot(aes(values = n, label = rapp, colour = rapp, fill = occ)) +
geom_waffle(make_proportional = T, flip = T) +
facet_wrap(~occ) +
theme_void() +
guides(label=guide_legend(nrow=2, byrow=TRUE)) +
theme(legend.title = element_blank(),
legend.position = 'bottom',
strip.text = element_text(size = 12),
plot.title = element_text(size = 20, hjust = .5))
Restare |>
group_by(rapp, occ) |>
count() |>
mutate(occ = case_match(occ,
'Disoccupat*' ~ 'Unemployed',
'Studente' ~ 'Student',
'Lavorator*' ~ 'Worker',
'Dottorand*' ~ 'PhD candidate'),
rapp = case_match(rapp,
'Vorrei restare nel posto in cui vivo' ~
'I\'d like to stay where I am',
'Sarei contento di vivere e lavorare altrove' ~
'I\'d like to live and work somewhere else',
'Vorrei restare ma non posso' ~
'I\'d like to stay, but I can\'t',
'Vorrei partire ma non posso' ~
'I\'d like to leave, but I can\'t'),
rapp = factor(rapp, levels = c(
'I\'d like to stay where I am',
'I\'d like to stay, but I can\'t',
'I\'d like to leave, but I can\'t',
'I\'d like to live and work somewhere else'
)))
Restare |>
group_by(rapp, occ) |>
count() |>
mutate(occ = case_match(occ,
'Disoccupat*' ~ 'Unemployed',
'Studente' ~ 'Student',
'Lavorator*' ~ 'Worker',
'Dottorand*' ~ 'PhD candidate'),
rapp = case_match(rapp,
'Vorrei restare nel posto in cui vivo' ~
'I\'d like to stay where I am',
'Sarei contento di vivere e lavorare altrove' ~
'I\'d like to live and work somewhere else',
'Vorrei restare ma non posso' ~
'I\'d like to stay, but I can\'t',
'Vorrei partire ma non posso' ~
'I\'d like to leave, but I can\'t'),
rapp = factor(rapp, levels = c(
'I\'d like to stay where I am',
'I\'d like to stay, but I can\'t',
'I\'d like to leave, but I can\'t',
'I\'d like to live and work somewhere else'
))) |>
ggplot(aes(values = n, label = rapp, colour = rapp, fill = rapp)) +
geom_waffle(make_proportional = T, flip = T) +
facet_wrap(~occ) +
theme_void() +
guides(label=guide_legend(nrow=2, byrow=TRUE)) +
theme(legend.title = element_blank(),
legend.position = 'bottom',
strip.text = element_text(size = 12),
plot.title = element_text(size = 20, hjust = .5))
Restare |>
group_by(rapp, occ) |>
count()
Restare |>
group_by(rapp) |>
count()
Restare |>
group_by(rapp) |>
count() |>
mutate(rapp = case_match(rapp,
'Vorrei restare nel posto in cui vivo' ~
'I\'d like to stay where I am',
'Sarei contento di vivere e lavorare altrove' ~
'I\'d like to live and work somewhere else',
'Vorrei restare ma non posso' ~
'I\'d like to stay, but I can\'t',
'Vorrei partire ma non posso' ~
'I\'d like to leave, but I can\'t'),
rapp = factor(rapp, levels = c(
'I\'d like to stay where I am',
'I\'d like to stay, but I can\'t',
'I\'d like to leave, but I can\'t',
'I\'d like to live and work somewhere else'
))) |>
waffle()
Restare |>
group_by(rapp) |>
count() |>
mutate(rapp = case_match(rapp,
'Vorrei restare nel posto in cui vivo' ~
'I\'d like to stay where I am',
'Sarei contento di vivere e lavorare altrove' ~
'I\'d like to live and work somewhere else',
'Vorrei restare ma non posso' ~
'I\'d like to stay, but I can\'t',
'Vorrei partire ma non posso' ~
'I\'d like to leave, but I can\'t'),
rapp = factor(rapp, levels = c(
'I\'d like to stay where I am',
'I\'d like to stay, but I can\'t',
'I\'d like to leave, but I can\'t',
'I\'d like to live and work somewhere else'
))) |>
waffle(size = 5, flip = T, reverse = T)
Restare |>
group_by(rapp) |>
count() |>
mutate(rapp = case_match(rapp,
'Vorrei restare nel posto in cui vivo' ~
'I\'d like to stay where I am',
'Sarei contento di vivere e lavorare altrove' ~
'I\'d like to live and work somewhere else',
'Vorrei restare ma non posso' ~
'I\'d like to stay, but I can\'t',
'Vorrei partire ma non posso' ~
'I\'d like to leave, but I can\'t'),
rapp = factor(rapp, levels = c(
'I\'d like to stay where I am',
'I\'d like to stay, but I can\'t',
'I\'d like to leave, but I can\'t',
'I\'d like to live and work somewhere else'
))) |>
waffle(size = 10, flip = T, reverse = T)
Restare |>
group_by(rapp) |>
count() |>
mutate(rapp = case_match(rapp,
'Vorrei restare nel posto in cui vivo' ~
'I\'d like to stay where I am',
'Sarei contento di vivere e lavorare altrove' ~
'I\'d like to live and work somewhere else',
'Vorrei restare ma non posso' ~
'I\'d like to stay, but I can\'t',
'Vorrei partire ma non posso' ~
'I\'d like to leave, but I can\'t'),
rapp = factor(rapp, levels = c(
'I\'d like to stay where I am',
'I\'d like to stay, but I can\'t',
'I\'d like to leave, but I can\'t',
'I\'d like to live and work somewhere else'
))) |>
waffle(size = 10, flip = T, reverse = T, legend_pos = 'bottom')
Restare |>
group_by(rapp) |>
count() |>
mutate(rapp = case_match(rapp,
'Vorrei restare nel posto in cui vivo' ~
'I\'d like to stay where I am',
'Sarei contento di vivere e lavorare altrove' ~
'I\'d like to live and work somewhere else',
'Vorrei restare ma non posso' ~
'I\'d like to stay, but I can\'t',
'Vorrei partire ma non posso' ~
'I\'d like to leave, but I can\'t'),
rapp = factor(rapp, levels = c(
'I\'d like to stay where I am',
'I\'d like to stay, but I can\'t',
'I\'d like to leave, but I can\'t',
'I\'d like to live and work somewhere else'
))) |>
waffle(size = 8, flip = T, reverse = T, legend_pos = 'bottom')
Restare |>
group_by(rapp) |>
count() |>
mutate(rapp = case_match(rapp,
'Vorrei restare nel posto in cui vivo' ~
'I\'d like to stay where I am',
'Sarei contento di vivere e lavorare altrove' ~
'I\'d like to live and work somewhere else',
'Vorrei restare ma non posso' ~
'I\'d like to stay, but I can\'t',
'Vorrei partire ma non posso' ~
'I\'d like to leave, but I can\'t'),
rapp = factor(rapp, levels = c(
'I\'d like to stay where I am',
'I\'d like to stay, but I can\'t',
'I\'d like to leave, but I can\'t',
'I\'d like to live and work somewhere else'
))) |>
waffle(size = 9, flip = T, reverse = T, legend_pos = 'bottom')
Restare |>
group_by(rapp) |>
count() |>
mutate(rapp = case_match(rapp,
'Vorrei restare nel posto in cui vivo' ~
'I\'d like to stay where I am',
'Sarei contento di vivere e lavorare altrove' ~
'I\'d like to live and work somewhere else',
'Vorrei restare ma non posso' ~
'I\'d like to stay, but I can\'t',
'Vorrei partire ma non posso' ~
'I\'d like to leave, but I can\'t'),
rapp = factor(rapp, levels = c(
'I\'d like to stay where I am',
'I\'d like to stay, but I can\'t',
'I\'d like to leave, but I can\'t',
'I\'d like to live and work somewhere else'
))) |>
waffle(size = 6, flip = T, reverse = T, legend_pos = 'bottom')
Restare |>
group_by(rapp) |>
count() |>
mutate(rapp = case_match(rapp,
'Vorrei restare nel posto in cui vivo' ~
'I\'d like to stay where I am',
'Sarei contento di vivere e lavorare altrove' ~
'I\'d like to live and work somewhere else',
'Vorrei restare ma non posso' ~
'I\'d like to stay, but I can\'t',
'Vorrei partire ma non posso' ~
'I\'d like to leave, but I can\'t'),
rapp = factor(rapp, levels = c(
'I\'d like to stay where I am',
'I\'d like to stay, but I can\'t',
'I\'d like to leave, but I can\'t',
'I\'d like to live and work somewhere else'
))) |>
waffle(size = 1, flip = T, reverse = T, legend_pos = 'bottom')
Restare |>
group_by(rapp) |>
count() |>
mutate(rapp = case_match(rapp,
'Vorrei restare nel posto in cui vivo' ~
'I\'d like to stay where I am',
'Sarei contento di vivere e lavorare altrove' ~
'I\'d like to live and work somewhere else',
'Vorrei restare ma non posso' ~
'I\'d like to stay, but I can\'t',
'Vorrei partire ma non posso' ~
'I\'d like to leave, but I can\'t'),
rapp = factor(rapp, levels = c(
'I\'d like to stay where I am',
'I\'d like to stay, but I can\'t',
'I\'d like to leave, but I can\'t',
'I\'d like to live and work somewhere else'
))) |>
waffle(size = 1, flip = T, reverse = T, legend_pos = 'right')
#| label: Setup
#| echo: false
# Pacchetti
if (!require("pacman")) install.packages("pacman")
library(pacman)
p_load(ggplot2, tidyverse, readxl, patchwork, ggiraph, ggbump, gt, gtExtras)
# Importazione dati
## Et√† per sesso
it00 <- readRDS('Dati/Export/it00.rds')
it24 <- readRDS('Dati/Export/it24.rds')
um00 <- readRDS('Dati/Export/um00.rds')
um24 <- readRDS('Dati/Export/um24.rds')
etadf <- readRDS('Dati/Export/etadf.rds')
FX <- readRDS('Dati/Export/FX.rds')
## Indicatori
inddf <- readRDS('Dati/Export/inddf.rds')
## Fecondit√†
fecdf <- readRDS('Dati/Export/fecdf.rds')
## Mortalit√†
umbMort <- readRDS('Dati/Export/umbMort.rds')
## Previsioni
umPrev <- readRDS('Dati/Export/umPrev.rds')
#| label: Piramidi delle et√†
#| fig-asp: 1
## Italia ----
### 2024
it24gg <- it24 |>
filter(Sesso != 'Totale') |>
ggplot(aes(x = Et√†,
y = ifelse(Sesso == 'M',
-`Tot per genere`, `Tot per genere`),
fill = Sesso)) +
geom_bar(stat = 'identity', width = 1) +
coord_flip() +
scale_fill_manual(values = c('#A4D1CA', '#148068')) +
labs(title = 'Italia 2024')
it00gg <- it00 |>
filter(Sesso != 'Totale') |>
ggplot(aes(x = Et√†,
y = ifelse(Sesso == 'M',
-`2000`, `2000`),
fill = Sesso)) +
geom_bar(stat = 'identity', width = 1) +
coord_flip() +
scale_fill_manual(values = c('#A4D1CA', '#148068')) +
labs(title = 'Italia 2000')
## Umbria ----
### 2024
um24gg <- um24 |>
filter(Sesso != 'Totale') |>
ggplot(aes(x = Et√†,
y = ifelse(Sesso == 'M',
-`Tot per genere`, `Tot per genere`),
fill = Sesso)) +
geom_bar(stat = 'identity', width = 1) +
coord_flip() +
scale_fill_manual(values = c('#A4D1CA', '#148068')) +
labs(title = 'Umbria 2024')
um00gg <- um00 |>
filter(Sesso != 'Totale') |>
ggplot(aes(x = Et√†,
y = ifelse(Sesso == 'M',
-`2000`, `2000`),
fill = Sesso)) +
geom_bar(stat = 'identity', width = 1) +
coord_flip() +
scale_fill_manual(values = c('#A4D1CA', '#148068')) +
labs(title = 'Umbria 2000')
## Patchwork ----
it00gg + um00gg + it24gg + um24gg +
plot_layout(guides = 'collect', axes = 'collect') +
plot_annotation(title = 'Piramidi delle et√†',
caption = 'Dati Demo.Istat',
theme = theme(plot.title = element_text(size = 18))) &
theme(legend.position = 'bottom',
# axis.title.x = element_blank(),
# axis.text.x = element_blank(),
# axis.ticks.x = element_blank(),
panel.background = element_blank(),
panel.grid = element_line(colour = 'gray90'),
legend.title = element_blank(),
plot.title.position = 'panel')
## Patchwork ----
it00gg + um00gg + it24gg + um24gg +
plot_layout(guides = 'collect', axes = 'collect') +
plot_annotation(title = 'Piramidi delle et√†',
caption = 'Dati Demo.Istat',
theme = theme(plot.title = element_text(size = 18))) &
theme(legend.position = 'bottom',
axis.title.x = element_blank(),
# axis.text.x = element_blank(),
# axis.ticks.x = element_blank(),
panel.background = element_blank(),
panel.grid = element_line(colour = 'gray90'),
legend.title = element_blank(),
plot.title.position = 'panel')
if (!require("pacman")) install.packages("pacman")
library(pacman)
p_load(tidyverse, tidytext, plotly, patchwork, ggiraph)
## Corriere dell'Umbria
CorrUmbriaTR <- readRDS('Rawdata/CorrUmbriaTR.RDS') |>
mutate(city = 'TR',
newspaper = 'Corriere dell\'Umbria')
time_art_data <- read_csv("time_art_data.csv")
time_art_data
## Patchwork ----
p <- time_art / reg_art +
plot_layout(guides = 'collect', heights  = c(8,1)) &
plot_annotation(title = 'Article distribution over time',
subtitle = 'By newspaper and city') &
scale_y_continuous(expand = c(0,0)) &
scale_fill_manual(values = pal, na.value = na_col) &
theme(legend.position = 'bottom',
axis.title = element_blank())
### interactive
girafe(ggobj = p, width_svg = 8,
options = list(
opts_hover(css = ''), ## CSS code of line we're hovering over
opts_hover_inv(css = "opacity:0.3;"), ## CSS code of all other lines
opts_tooltip(css = "background-color:white;
color:black;
font-family:Helvetica;
font-style:empty;
padding:8px;
border-radius:10px;",
use_cursor_pos = T),
opts_toolbar(position = 'bottomright')))
## Patchwork ----
p <- time_art / reg_art +
plot_layout(guides = 'collect', heights  = c(8,1)) &
plot_annotation(title = 'Article distribution over time',
subtitle = 'By newspaper and city') &
scale_y_continuous(expand = c(0,0)) &
scale_fill_manual(values = pal, na.value = na_col) &
theme(legend.position = 'bottom',
axis.title = element_blank())
## Distribution of articles over time ----
time_art <- time_art_data |>
ggplot(aes(month, n, fill = newspaper, data_id = month,tooltip = n)) +
geom_col_interactive(position = 'stack', width = 70) +
theme(axis.line.y = element_blank()) +
scale_x_date(limits = c(as_date(as_date('1 January 2011', format = "%d %B %Y")), NA))
## Regional composition ----
reg_art <- reg_art_data |>
ggplot(aes(city, n, fill = newspaper, data_id = city, tooltip = n)) +
coord_flip() +
theme(axis.line.x = element_blank()) +
geom_col_interactive()
reg_art_data <- read_csv("reg_art_data.csv")
# Descriptives -----------------------------------------------------------------
## graphics ----
### palette ----
pal <- c(
"#FDA638",
"#459395",
"#EB7C69"
)
na_col <- "#866f85"
### theming ----
theme_set(theme(panel.background = element_blank(),
axis.ticks = element_blank(),
legend.title = element_blank(),
panel.grid.major = element_line(linetype = 'solid', colour = 'gray97', linewidth = .3),
panel.grid.minor = element_blank(),
axis.line.x = element_line(colour = 'gray25'),
axis.line.y = element_line(colour = 'gray25')))
## Distribution of articles over time ----
time_art <- time_art_data |>
ggplot(aes(month, n, fill = newspaper, data_id = month,tooltip = n)) +
geom_col_interactive(position = 'stack', width = 70) +
theme(axis.line.y = element_blank()) +
scale_x_date(limits = c(as_date(as_date('1 January 2011', format = "%d %B %Y")), NA))
## Regional composition ----
reg_art <- reg_art_data |>
ggplot(aes(city, n, fill = newspaper, data_id = city, tooltip = n)) +
coord_flip() +
theme(axis.line.x = element_blank()) +
geom_col_interactive()
## Patchwork ----
p <- time_art / reg_art +
plot_layout(guides = 'collect', heights  = c(8,1)) &
plot_annotation(title = 'Article distribution over time',
subtitle = 'By newspaper and city') &
scale_y_continuous(expand = c(0,0)) &
scale_fill_manual(values = pal, na.value = na_col) &
theme(legend.position = 'bottom',
axis.title = element_blank())
### interactive
girafe(ggobj = p, width_svg = 8,
options = list(
opts_hover(css = ''), ## CSS code of line we're hovering over
opts_hover_inv(css = "opacity:0.3;"), ## CSS code of all other lines
opts_tooltip(css = "background-color:white;
color:black;
font-family:Helvetica;
font-style:empty;
padding:8px;
border-radius:10px;",
use_cursor_pos = T),
opts_toolbar(position = 'bottomright')))
#| label: 'Setup'
#| echo: false
#| label: 'Descriptives viz'
#| warning: false
```{r}
?future_map
